name:
  Broken Crypto Object-Sensitive True-Positive Case 1

api:
  javax.crypto.KeyGenerator

description:
  Two objects are created that each hold the name of a single cipher. One contains the insecure DES cipher, the other
  the secure AES cipher. The object with the insecure cipher is then used to get an instance of the KeyGenerator.

crypto-usage:
  violation: true
  FUM:
    - argument_state/string_format
  location:
    file: main/java/org/cambench/cap/objectsensitivity/truepositive/brokencrypto/BrokenCrypto1.java
    method: main(String[] args)
    line: 31

    root:
      location:
        file: main/java/org/cambench/cap/objectsensitivity/truepositive/brokencrypto/BrokenCrypto1.java
        method: main(String[] args)
        line: 28

fix:
  description:
    Replace the insecure algorithm with a secure one (e.g. AES, depending on the algorithm used for the cipher object).
  file: main/java/org/cambench/cap/objectsensitivity/truepositive/brokencrypto/CorrectedCrypto.java

codemetrics:
  loc: 26
  cc: 2

capabilities:
  - object-sensitivity

security:
  issue: true
  issue-description:
    The KeyGenerator is initialized with an insecure algorithm. Since insecure algorithms should not be utilized
    to create cipher objects, they also should not be utilized to create the according keys.