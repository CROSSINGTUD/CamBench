name:
  Static Initialization Vector Object-Sensitive True-Positive Case 1

api:
  javax.crypto.spec.IvParameterSpec

description:
  Five objects are created that each contain a byte array. The byte arrays are eiter filled with random values, or
  based on a static string. One of the static arrays is then used for creating an initialization vector for
  cipher initialization.

crypto-usage:
  violation: true
  FUM:
    - argument_state
  location:
    file: main/java/org/cambench/cap/objectsensitivity/truepositive/staticiv/StaticIv1.java
    method: main(String[] args)
    line: 43

    root:
      location:
        file: main/java/org/cambench/cap/objectsensitivity/truepositive/staticiv/StaticIv1.java
        method: main(String[] args)
        line: 37

fix:
  description:
    Use the SecureRandom class to create a pseudorandom byte array instead of using a static value for iv creation.
  file: main/java/org/cambench/cap/objectsensitivity/truepositive/staticiv/CorrectedIv.java

codemetrics:
  loc: 42
  cc: 3

capabilities:
  - object-sensitivity

security:
  issue: true
  issue-description:
    A static value is used to create an initialization vector. This can lead to insecurities, since initialization
    vectors are often required to be random in order to guarantee a secure encryption.