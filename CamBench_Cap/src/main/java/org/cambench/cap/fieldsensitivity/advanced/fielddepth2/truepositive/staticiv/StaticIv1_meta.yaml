name:
  Static Initialization Vector Field-Sensitive Field-Depth 2 True-Positive Case 1

api:
  javax.crypto.spec.IvParameterSpec

description:
  A static and a pseudorandom byte array are stored in an object's fields that is stored in an object's
  field itself (getting a field-depth of 2, e.g. object.field.field).
  The static one is then utilized to create an initialization vector and initialize an instance of the AES algorithm.

crypto-usage:
  violation: true
  FUM:
    - argument_state
  location:
    file: main/java/org/cambench/cap/fieldsensitivity/advanced/fielddepth2/truepositive/staticiv/StaticIv1.java
    method: main(String[] args)
    line: 42

    root:
      location:
        file: main/java/org/cambench/cap/fieldsensitivity/advanced/fielddepth2/truepositive/staticiv/StaticIv1.java
        method: main(String[] args)
        line: 39

fix:
  description:
    Use the SecureRandom class to create a pseudorandom byte array instead of using a static byte array for iv creation.
  file: main/java/org/cambench/cap/fieldsensitivity/advanced/fielddepth2/truepositive/staticiv/CorrectedIv.java

codemetrics:
  loc: 35
  cc: 1

capabilities:
  - field-sensitivity

security:
  issue: true
  issue-description:
    A static byte array is used to create an initialization vector. This can lead to insecurities, since initialization
    vectors are often required to be random in order to guarantee a secure encryption.