name:
  Static InitializationVector Path-Sensitive True-Positive Case 2

api:
  javax.crypto.Cipher

description:
  The byte array for the iv initialization is set to a static value in the if branch of the conditional clause, which
  is reached. The else branch overwrites the content of the byte array with random values, but is never reached.

crypto-usage:
  violation: true
  FUM:
    - argument_state
  location:
    file: main/java/org/cambench/cap/pathsensitivity/truepositive/staticiv/StaticIv2.java
    method: main(String[] args)
    line: 28

    root:
      location:
        file: main/java/org/cambench/cap/pathsensitivity/truepositive/staticiv/StaticIv2.java
        method: main(String[] args)
        line: 24

fix:
  description:
    Use the SecureRandom class to create a pseudorandom byte array instead of using a static value for iv creation.
  file: main/java/org/cambench/cap/pathsensitivity/truepositive/staticiv/CorrectedIv.java

codemetrics:
  loc: 30
  cc: 2

capabilities:
  - path-sensitivity

security:
  issue: true
  issue-description:
    A static value is used to create an initialization vector. This can lead to insecurities, since initialization
    vectors are often required to be random in order to guarantee a secure encryption.