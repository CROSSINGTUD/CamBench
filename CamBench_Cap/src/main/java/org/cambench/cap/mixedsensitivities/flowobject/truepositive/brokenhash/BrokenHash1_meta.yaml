name:
  Broken Hash Function Flow- & Object-Sensitive True-Positive Case 1

api:
  java.security.MessageDigest

description:
  Two objects are created that each contain a string that is set to the name of a a hash algorithm (MD5, SHA-256).
  These strings are then re-assigned with the, however the insecure one (MD5) is used to create an instance of the
  algorithm and calculate the hash value of some data.

crypto-usage:
  violation: true
  FUM:
    - argument_state/string_format
  location:
    file: main/java/org/cambench/cap/mixedsensitivities/flowobject/truepositive/brokenhash/BrokenHash1.java
    method: main(String[] args)
    line: 32

    root:
      location:
        file: main/java/org/cambench/cap/mixedsensitivities/flowobject/truepositive/brokenhash/BrokenHash1.java
        method: main(String[] args)
        line: 28

fix:
  description:
    Replace the insecure hash algorithm with a secure hash algorithm (e.g. SHA-256).
  file: main/java/org/cambench/cap/mixedsensitivities/flowobject/truepositive/brokenhash/CorrectedHash.java

codemetrics:
  loc: 24
  cc: 1

capabilities:
  - flow-sensitivity
  - object-sensitivity

security:
  issue: true
  issue-description:
    MD5 is a broken hash algorithm and should therefore not be used for its cryptographic properties.