name:
  Broken Crypto Path- And Object-Sensitive True-Positive Case 2

api:
  javax.crypto.Cipher

description:
  Two objects are created in each branch of the conditional statement that each have a string with 
  the name of a cryptographic cipher as value (Blowfish and AES, respectively). 
  The object containing the Blowfish string is then used to create an instance of the cipher.

crypto-usage:
  violation: true
  FUM:
    - argument_state/string_format
  location:
    file: main/java/org/cambench/cap/mixedsensitivities/objectpath/truepositive/brokencrypto/BrokenCrypto2.java
    method: main(String[] args)
    line: 40

    root:
      location:
        file: main/java/org/cambench/cap/mixedsensitivities/objectpath/truepositive/brokencrypto/BrokenCrypto2.java
        method: main(String[] args)
        line: 33

fix:
  description:
    Replace the insecure cipher with a secure one (e.g. AES with an appropriate configuration).
  file: main/java/org/cambench/cap/mixedsensitivities/objectpath/truepositive/brokencrypto/CorrectedCrypto.java

codemetrics:
  loc: 36
  cc: 3

capabilities:
  - object-sensitivity
  - path-sensitivity

security:
  issue: true
  issue-description:
    A cipher object is initialized based on the Blowfish algorithm, which should not be utilized since there exist
    attacks on 64-bit block ciphers like sweet32.