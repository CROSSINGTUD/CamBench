name:
  Broken Hash Function Path- And Field-Sensitive True-Positive Case 1

api:
  java.security.MessageDigest

description:
  A variable is set to the name of the insecure MD5 algorithm. The object is then re-assigned with
  the name of the SHA-1 algorithm in the reachable branch of the conditional statement instead of the unreachable secure
  SHA-256, before a hash value is computed.

crypto-usage:
  violation: true
  FUM:
    - argument_state/string_format
  location:
    file: main/java/org/cambench/cap/mixedsensitivities/flowpath/truepositive/brokenhash/BrokenHash1.java
    method: main(String[] args)
    line: 35

    root:
      location:
        file: main/java/org/cambench/cap/mixedsensitivities/flowpath/truepositive/brokenhash/BrokenHash1.java
        method: main(String[] args)
        line: 30

fix:
  description:
    Replace the insecure hash algorithm with a secure hash algorithm (e.g. SHA-256).
  file: main/java/org/cambench/cap/mixedsensitivities/flowpath/truepositive/brokenhash/CorrectedHash.java

codemetrics:
  loc: 23
  cc: 2

capabilities:
  - flow-sensitivity
  - path-sensitivity

security:
  issue: true
  issue-description:
    SHA-1 is a broken hash algorithm and should therefore not be used for its cryptographic properties.