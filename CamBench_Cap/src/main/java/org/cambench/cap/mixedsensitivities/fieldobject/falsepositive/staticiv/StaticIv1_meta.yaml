name:
  Static Initialization Vector Field- & Object-Sensitive True-Positive Case 1

api:
  javax.crypto.spec.IvParameterSpec

description:
  A static (string-based) and a pseudorandom byte array are each stored in the fields of two objects.
  One of the fields containing the static array is then utilized to create an initialization vector 
  and initialize an instance of the AES algorithm.

crypto-usage:
  violation: true
  FUM:
    - argument_state
  location:
    file: main/java/org/cambench/cap/mixedsensitivities/fieldobject/truepositive/staticiv/StaticIv1.java
    method: main(String[] args)
    line: 44

    root:
      location:
        file: main/java/org/cambench/cap/mixedsensitivities/fieldobject/truepositive/staticiv/StaticIv1.java
        method: main(String[] args)
        line: 42

fix:
  description:
    Use the SecureRandom class to create a pseudorandom byte array instead of using a static byte array for iv creation.
  file: main/java/org/cambench/cap/mixedsensitivities/fieldobject/truepositive/staticiv/CorrectedIv.java

codemetrics:
  loc: 36
  cc: 1

capabilities:
  - field-sensitivity
  - object-sensitivity

security:
  issue: true
  issue-description:
    A static byte array is used to create an initialization vector. This can lead to insecurities, since initialization
    vectors are often required to be random in order to guarantee a secure encryption.