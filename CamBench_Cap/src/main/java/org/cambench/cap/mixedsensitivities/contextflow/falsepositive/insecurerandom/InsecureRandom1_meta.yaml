name:
  Insecure Random Centext- & Flow-Sensitive True-Positive Case 1

api:
  javax.crypto.spec.IvParameterSpec

description:
  An instance of the Random class and one of the SecureRandom class are created and stored in variables by using 
  the identity function.
  The first one is then used to create an initialization vector (iv) for the cipher initialization before it is re-assigned
  with an instance of the SecureRandom class.

crypto-usage:
  violation: true
  FUM:
    - argument_state
  location:
    file: main/java/org/cambench/cap/mixedsensitivities/contextflow/truepositive/insecurerandom/InsecureRandom1.java
    method: main(String[] args)
    line: 40

    root:
      location:
        file: main/java/org/cambench/cap/mixedsensitivities/contextflow/truepositive/insecurerandom/InsecureRandom1.java
        method: main(String[] args)
        line: 38

fix:
  description:
    Instead of the standard Random class, use the SecureRandom class to generate a random byte array for an initialization vector.
  file: main/java/org/cambench/cap/mixedsensitivities/contextflow/truepositive/insecurerandom/CorrectedRandom.java

codemetrics:
  loc: 33
  cc: 2

capabilities:
  - context-sensitivity
  - flow-sensitivity

security:
  issue: true
  issue-description:
    The initialization vector (iv) that is used to initialize an instance of a cipher is created with the standard 
    Random class, which should not be used in a cryptographic context.