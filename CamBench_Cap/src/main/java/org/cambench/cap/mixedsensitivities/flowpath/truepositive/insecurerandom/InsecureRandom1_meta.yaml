name:
  Insecure Random Path- And Flow-Sensitive True-Positive Case 1

api:
  javax.crypto.spec.IvParameterSpec

description:
  A byte array ist filled with random bytes by using the Random class.
  The array is filled again with either the Random or SecureRandom class depending on the branch condition.
  The object of the Random class is used and the array is then used as initialization vector for a cipher.

crypto-usage:
  violation: true
  FUM:
    - argument_state
  location:
    file: main/java/org/cambench/cap/mixedsensitivities/flowpath/truepositive/insecurerandom/InsecureRandom1.java
    method: main(String[] args)
    line: 47

    root:
      location:
        file: main/java/org/cambench/cap/mixedsensitivities/flowpath/truepositive/insecurerandom/InsecureRandom1.java
        method: main(String[] args)
        line: 44

fix:
  description:
    Replace the used object of the "Random" class with an object of the "SecureRandom" class
    to generate a byte array for an iv.
  file: main/java/org/cambench/cap/mixedsensitivities/flowpath/truepositive/insecurerandom/CorrectedRandom.java

codemetrics:
  loc: 34
  cc: 2

capabilities:
  - flow-sensitivity
  - path-sensitivity

security:
  issue: true
  issue-description:
    The "Random" class is used to generate a random byte array, which can lead to insecurities.
    For cryptographic use cases, the "SecureRandom" class should be used.