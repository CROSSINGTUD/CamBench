name:
  Static Initialization Vector 2-Interprocedural Object-Sensitive True-Positive Case 1

api:
  javax.crypto.spec.IvParameterSpec

description:
  Two objects are created that each contain a byte array. One byte array is filled with random values, the other
  is filled based on a static string. The static array is then passed to a method and used to
  create an initialization vector for cipher initialization.

crypto-usage:
  violation: true
  FUM:
    - argument_state
  location:
    file: main/java/org/cambench/cap/mixedsensitivities/inter2object/truepositive/staticiv/StaticIv1.java
    method: method1(byte[] ivBytes)
    line: 45

    root:
      location:
        file: main/java/org/cambench/cap/mixedsensitivities/inter2object/truepositive/staticiv/StaticIv1.java
        method: main(String[] args)
        line: 35

fix:
  description:
    Use the SecureRandom class to create a pseudorandom byte array instead of using a static value for iv creation.
  file: main/java/org/cambench/cap/mixedsensitivities/inter2object/truepositive/staticiv/CorrectedIv.java

codemetrics:
  loc: 44
  cc: 4

capabilities:
  - interprocedural
  - object-sensitivity

security:
  issue: true
  issue-description:
    A static value is used to create an initialization vector. This can lead to insecurities, since initialization
    vectors are often required to be random in order to guarantee a secure encryption.