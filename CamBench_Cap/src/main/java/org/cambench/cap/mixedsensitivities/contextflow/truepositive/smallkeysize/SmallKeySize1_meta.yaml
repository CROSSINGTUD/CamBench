name:
  Small Key Size Context- & Flow-Sensitive True-Positive Case 1

api:
  java.security.KeyPairGenerator

description:
  Two different key sizes (1024 and 2048) are stored in variables using the identity function.
  The smaller key size is then used to initialize the instance of the RSA algorithm for encryption, before it is
  re-assigned with bigger, secure key size.

crypto-usage:
  violation: true
  FUM:
    - argument_state/number_range
  location:
    file: main/java/org/cambench/cap/mixedsensitivities/contextflow/truepositive/smallkeysize/SmallKeySize1.java
    method: main(String[] args)
    line: 34

    root:
      file: main/java/org/cambench/cap/mixedsensitivities/contextflow/truepositive/smallkeysize/SmallKeySize1.java
      method: main(String[] args)
      line: 30

fix:
  description:
    Increase the key size to the recommended value of 2048 bits or more for the RSA algorithm.
  file: main/java/org/cambench/cap/mixedsensitivities/contextflow/truepositive/smallkeysize/CorrectedKeySize.java

codemetrics:
  loc: 29
  cc: 2

capabilities:
  - context-sensitivity
  - flow-sensitivity

security:
  issue: true
  issue-description:
    The size of the generated keys does not conform the recommended minimum of 2048 bits.
    Smaller key sizes can lead to insecurities when using the RSA algorithm.
    Beyond 2023 the minimum key length will be 3072 bits.