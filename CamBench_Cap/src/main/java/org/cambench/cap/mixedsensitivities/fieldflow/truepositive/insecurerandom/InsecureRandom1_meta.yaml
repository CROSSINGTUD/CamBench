name:
  Insecure Random Field- & Flow-Sensitive True-Positive Case 1

api:
  javax.crypto.spec.IvParameterSpec

description:
  An object of class Random and one of class SecureRandom are created and stored in another object's fields.
  The instance of the Random class is then utilized to create an initialization vector (iv) for a cipher before it is
  replaced with an object of the SecureRandom class.

crypto-usage:
  violation: true
  FUM:
    - argument_state
  location:
    file: main/java/org/cambench/cap/mixedsensitivities/fieldflow/truepositive/insecurerandom/InsecureRandom1.java
    method: main(String[] args)
    line: 26

    root:
      location:
        file: main/java/org/cambench/cap/mixedsensitivities/fieldflow/truepositive/insecurerandom/InsecureRandom1.java
        method: main(String[] args)
        line: 24

fix:
  description:
    Replace the used object of the "Random" class with an object of the "SecureRandom" class
    to generate a byte array for an iv.
  file: main/java/org/cambench/cap/mixedsensitivities/fieldflow/truepositive/insecurerandom/CorrectedRandom.java

codemetrics:
  loc: 36
  cc: 1

capabilities:
  - field-sensitivity
  - flow-sensitivity

security:
  issue: true
  issue-description:
    The "Random" class is used to generate a random byte array, which can lead to insecurities.
    For cryptographic use cases, the "SecureRandom" class should be used.