name:
  Broken Hash Function 2-Interprocedural Object-Sensitive True-Positive Case 1

api:
  java.security.MessageDigest

description:
  Two objects are created that each hold the name of a hash algorithm. One contains the insecure MD5 algorithm, the other one
  the secure SHA-256 algorithm. The object with the insecure hash algorithm is then passed to a method and is used 
  to initialize a MessageDigest object that generates the hash of some data.

crypto-usage:
  violation: true
  FUM:
    - argument_state/string_format
  location:
    file: main/java/org/cambench/cap/mixedsensitivities/inter2object/truepositive/brokenhash/BrokenHash1.java
    method: method1(String algo, String data)
    line: 32

    root:
      location:
        file: main/java/org/cambench/cap/mixedsensitivities/inter2object/truepositive/brokenhash/BrokenHash1.java
        method: main(String[] args)
        line: 24

fix:
  description:
    Replace the insecure hash algorithm with a secure hash algorithm (e.g. SHA-256)
  file: main/java/org/cambench/cap/mixedsensitivities/inter2object/truepositive/brokenhash/CorrectedHash.java

codemetrics:
  loc: 28
  cc: 3

capabilities:
  - interprocedural
  - object-sensitivity

security:
  issue: true
  issue-description:
    MD5 is a broken hash algorithm and should therefore not be used for its cryptographic properties.