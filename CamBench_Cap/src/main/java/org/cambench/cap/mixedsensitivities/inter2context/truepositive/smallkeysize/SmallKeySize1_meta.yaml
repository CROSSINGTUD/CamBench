name:
  Small Key Size 2-Interprocedural Context-Sensitive True-Positive Case 1

api:
  javax.crypto.Cipher

description:
  Two different key sizes (512 and 2048) are stored in variables by using the Identity function. 
  The smaller key size is then passed to a method and used to initialize an instance of the RSA algorithm for encryption.

crypto-usage:
  violation: true
  FUM:
    - argument_state/number_range
  location:
    file: main/java/org/cambench/cap/mixedsensitivities/inter2context/truepositive/smallkeysize/SmallKeySize1.java
    method: method1(int keySize)
    line: 28

    root:
      file: main/java/org/cambench/cap/mixedsensitivities/inter2context/truepositive/smallkeysize/SmallKeySize1.java
      method: main(String[] args)
      line: 12

fix:
  description:
    Increase the key size to the recommended value of 2048 bits or more for the RSA algorithm.
  file: main/java/org/cambench/cap/mixedsensitivities/inter2context/truepositive/smallkeysize/CorrectedKeySize.java

codemetrics:
  loc: 30
  cc: 3

capabilities:
  - interprocedural
  - context-sensitivity

security:
  issue: true
  issue-description:
    The key-pair that is used for the RSA algorithm is initialized with a too small size (512 bits).
    As recommended by NIST, RSA keys should be at least of 2048 bits.